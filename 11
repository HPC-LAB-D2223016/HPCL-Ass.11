#include <mpi.h>
#include <stdio.h>

int main(int argc, char** argv) {
    int N = 10000; // Sum of first N integers
    int rank, size, local_sum = 0, global_sum = 0;

    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);

    // Divide work among processes
    int chunk_size = N / size;
    int start = rank * chunk_size + 1;
    int end = (rank == size - 1) ? N : start + chunk_size - 1;

    // Calculate local sum
    for (int i = start; i <= end; i++) {
        local_sum += i;
    }

    // Reduce local sums to global sum
    MPI_Reduce(&local_sum, &global_sum, 1, MPI_INT, MPI_SUM, 0, MPI_COMM_WORLD);

    if (rank == 0) {
        printf("Sum of first %d integers is %d\n", N, global_sum);
    }

    MPI_Finalize();
    return 0;
}
